package scheme_test

import (
	"testing"

	"github.com/52funny/scheme"
	"github.com/cloudflare/circl/ecc/bls12381"
	"github.com/ncw/gmp"
	"github.com/stretchr/testify/assert"
)

func TestGmpToScalar(t *testing.T) {
	s := "160007237400555224599831901100263270830373830991955157496305573038332573861545048295739873546157005958271780109761729313482511110316227167480672760310597168250665417153673762539802213365442805830919856177824488153648255473249017353681833075739187255239293116241021828589916858283321117844424857788470438102557"
	S, _ := new(gmp.Int).SetString(s, 10)
	scalar := scheme.GmpToScalar(S)
	// scalar =? s % 0x73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001
	assert.Equal(t, "0x2f1a3bc4669da435eb3a3791690bd5ec326497cc439bf89f26b8cd1087ee0fe4", scalar.String())
	S.Clear()
}

func TestScalarToGmp(t *testing.T) {
	scalar := new(bls12381.Scalar)
	scalar.SetString("21305054405088469331265359819982313554484008992307680608690037809321889107940")
	g := scheme.ScalarToGmp(scalar)
	assert.Equal(t, "21305054405088469331265359819982313554484008992307680608690037809321889107940", g.String())
	g.Clear()
}
